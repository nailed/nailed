--- ../src-base/minecraft/net/minecraft/server/dedicated/DedicatedServer.java
+++ ../src-work/minecraft/net/minecraft/server/dedicated/DedicatedServer.java
@@ -1,16 +1,17 @@
 package net.minecraft.server.dedicated;
 
-import java.io.BufferedReader;
 import java.io.File;
 import java.io.IOException;
-import java.io.InputStreamReader;
 import java.net.InetAddress;
 import java.net.Proxy;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
-import java.util.Random;
 import java.util.concurrent.Callable;
+
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+
 import net.minecraft.command.ICommandSender;
 import net.minecraft.command.ServerCommand;
 import net.minecraft.crash.CrashReport;
@@ -23,17 +24,19 @@
 import net.minecraft.server.ServerEula;
 import net.minecraft.server.gui.MinecraftServerGui;
 import net.minecraft.server.management.PreYggdrasilConverter;
-import net.minecraft.server.management.ServerConfigurationManager;
 import net.minecraft.util.ChunkCoordinates;
 import net.minecraft.util.CryptManager;
 import net.minecraft.util.MathHelper;
 import net.minecraft.world.EnumDifficulty;
 import net.minecraft.world.World;
 import net.minecraft.world.WorldSettings;
-import net.minecraft.world.WorldType;
-import org.apache.logging.log4j.LogManager;
-import org.apache.logging.log4j.Logger;
 
+import jk_5.nailed.server.NailedEventFactory;
+import jk_5.nailed.server.config.MinecraftConfig;
+import jk_5.nailed.server.console.CommandReaderThread;
+import jk_5.nailed.server.network.NailedNetworkManager;
+import jk_5.nailed.server.tweaker.NailedTweaker;
+
 public class DedicatedServer extends MinecraftServer implements IServer {
     private static final Logger field_155771_h = LogManager.getLogger();
     private final List field_71341_l = Collections.synchronizedList(new ArrayList());
@@ -45,6 +48,7 @@
     private WorldSettings.GameType field_71337_q;
     private boolean field_71335_s;
     private static final String __OBFID = "CL_00001784";
+    public static boolean allowPlayerLogins = false;
 
     public DedicatedServer(File p_i1508_1_) {
         super(p_i1508_1_, Proxy.NO_PROXY);
@@ -69,86 +73,77 @@
     }
 
     protected boolean func_71197_b() throws IOException {
-        Thread thread = new Thread("Server console handler") {
-            private static final String __OBFID = "CL_00001786";
-            public void run() {
-                BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(System.in));
-                String s4;
+        CommandReaderThread.start();
 
-                try {
-                    while (!DedicatedServer.this.func_71241_aa() && DedicatedServer.this.func_71278_l() && (s4 = bufferedreader.readLine()) != null) {
-                        DedicatedServer.this.func_71331_a(s4, DedicatedServer.this);
-                    }
-                } catch (IOException ioexception1) {
-                    DedicatedServer.field_155771_h.error("Exception handling console input", ioexception1);
-                }
-            }
-        };
-        thread.setDaemon(true);
-        thread.start();
         field_155771_h.info("Starting minecraft server version 1.7.10");
 
         if (Runtime.getRuntime().maxMemory() / 1024L / 1024L < 512L) {
             field_155771_h.warn("To start the server with more ram, launch it as \"java -Xmx1024M -Xms1024M -jar minecraft_server.jar\"");
         }
 
+        NailedEventFactory.fireServerStartBeforeConfig(this);
+
         field_155771_h.info("Loading properties");
-        this.field_71340_o = new PropertyManager(new File("server.properties"));
+        //this.settings = new PropertyManager(new File("server.properties"));
+        this.field_71340_o = new MinecraftConfig();
         this.field_154332_n = new ServerEula(new File("eula.txt"));
 
-        if (!this.field_154332_n.func_154346_a()) {
+        if (!NailedTweaker.acceptEula() && !this.field_154332_n.func_154346_a()) {
             field_155771_h.info("You need to agree to the EULA in order to run the server. Go to eula.txt for more info.");
             this.field_154332_n.func_154348_b();
             return false;
         } else {
             if (this.func_71264_H()) {
-                this.func_71189_e("127.0.0.1");
+                //this.setHostname("127.0.0.1");
             } else {
                 this.func_71229_d(this.field_71340_o.func_73670_a("online-mode", true));
-                this.func_71189_e(this.field_71340_o.func_73671_a("server-ip", ""));
+                //this.setHostname(this.settings.getStringProperty("server-ip", ""));
             }
 
-            this.func_71251_e(this.field_71340_o.func_73670_a("spawn-animals", true));
-            this.func_71257_f(this.field_71340_o.func_73670_a("spawn-npcs", true));
-            this.func_71188_g(this.field_71340_o.func_73670_a("pvp", true));
+            this.func_71251_e(true);
+            this.func_71257_f(true);
+            this.func_71188_g(true);
             this.func_71245_h(this.field_71340_o.func_73670_a("allow-flight", false));
             this.func_155759_m(this.field_71340_o.func_73671_a("resource-pack", ""));
             this.func_71205_p(this.field_71340_o.func_73671_a("motd", "A Minecraft Server"));
-            this.func_104055_i(this.field_71340_o.func_73670_a("force-gamemode", false));
+            this.func_104055_i(false);
             this.func_143006_e(this.field_71340_o.func_73669_a("player-idle-timeout", 0));
 
-            if (this.field_71340_o.func_73669_a("difficulty", 1) < 0) {
-                this.field_71340_o.func_73667_a("difficulty", Integer.valueOf(0));
-            } else if (this.field_71340_o.func_73669_a("difficulty", 1) > 3) {
-                this.field_71340_o.func_73667_a("difficulty", Integer.valueOf(3));
+            /*
+            if (this.settings.getIntProperty("difficulty", 1) < 0) {
+                this.settings.setProperty("difficulty", Integer.valueOf(0));
+            } else if (this.settings.getIntProperty("difficulty", 1) > 3) {
+                this.settings.setProperty("difficulty", Integer.valueOf(3));
             }
+            */
 
-            this.field_71338_p = this.field_71340_o.func_73670_a("generate-structures", true);
-            int i = this.field_71340_o.func_73669_a("gamemode", WorldSettings.GameType.SURVIVAL.func_77148_a());
-            this.field_71337_q = WorldSettings.func_77161_a(i);
+            this.field_71338_p = true;
+            this.field_71337_q = WorldSettings.GameType.ADVENTURE; //Nailed: set to ADVENTURE default
             field_155771_h.info("Default game type: " + this.field_71337_q);
             InetAddress inetaddress = null;
 
-            if (this.func_71211_k().length() > 0) {
-                inetaddress = InetAddress.getByName(this.func_71211_k());
+            /*if (this.getServerHostname().length() > 0) {
+                inetaddress = InetAddress.getByName(this.getServerHostname());
             }
 
-            if (this.func_71215_F() < 0) {
-                this.func_71208_b(this.field_71340_o.func_73669_a("server-port", 25565));
-            }
+            if (this.getServerPort() < 0) {
+                this.setServerPort(this.settings.getIntProperty("server-port", 25565));
+            }*/
 
             field_155771_h.info("Generating keypair");
             this.func_71253_a(CryptManager.func_75891_b());
-            field_155771_h.info("Starting Minecraft server on " + (this.func_71211_k().length() == 0 ? "*" : this.func_71211_k()) + ":" + this.func_71215_F());
+            //field_155771_h.info("Starting Minecraft server on " + (this.getServerHostname().length() == 0 ? "*" : this.getServerHostname()) + ":" + this.getServerPort());
 
-            try {
-                this.func_147137_ag().func_151265_a(inetaddress, this.func_71215_F());
+            //Nailed: redirect this to our own network system
+            NailedNetworkManager.startEndpoints();
+            /*try {
+                this.func_147137_ag().addLanEndpoint(inetaddress, this.getServerPort());
             } catch (IOException ioexception) {
                 field_155771_h.warn("**** FAILED TO BIND TO PORT!");
                 field_155771_h.warn("The exception was: {}", new Object[] {ioexception.toString()});
                 field_155771_h.warn("Perhaps a server is already running on that port?");
                 return false;
-            }
+            }*/
 
             if (!this.func_71266_T()) {
                 field_155771_h.warn("**** SERVER IS RUNNING IN OFFLINE/INSECURE MODE!");
@@ -157,9 +152,10 @@
                 field_155771_h.warn("To change this, set \"online-mode\" to \"true\" in the server.properties file.");
             }
 
-            if (this.func_152368_aE()) {
-                this.func_152358_ax().func_152658_c();
-            }
+            //Nailed: disable the yggdrasil converter. we don't need it
+            //if (this.func_152368_aE()) {
+            //    this.func_152358_ax().func_152658_c();
+            //}
 
             if (!PreYggdrasilConverter.func_152714_a(this.field_71340_o)) {
                 return false;
@@ -167,13 +163,14 @@
                 this.func_152361_a(new DedicatedPlayerList(this));
                 long j = System.nanoTime();
 
-                if (this.func_71270_I() == null) {
-                    this.func_71261_m(this.field_71340_o.func_73671_a("level-name", "world"));
+                /*
+                if (this.getFolderName() == null) {
+                    this.setFolderName(this.settings.getStringProperty("level-name", "world"));
                 }
 
-                String s = this.field_71340_o.func_73671_a("level-seed", "");
-                String s1 = this.field_71340_o.func_73671_a("level-type", "DEFAULT");
-                String s2 = this.field_71340_o.func_73671_a("generator-settings", "");
+                String s = this.settings.getStringProperty("level-seed", "");
+                String s1 = this.settings.getStringProperty("level-type", "DEFAULT");
+                String s2 = this.settings.getStringProperty("generator-settings", "");
                 long k = (new Random()).nextLong();
 
                 if (s.length() > 0) {
@@ -188,22 +185,21 @@
                     }
                 }
 
-                WorldType worldtype = WorldType.func_77130_a(s1);
+                WorldType worldtype = WorldType.parseWorldType(s1);
 
                 if (worldtype == null) {
-                    worldtype = WorldType.field_77137_b;
+                    worldtype = WorldType.DEFAULT;
                 }
+                */
 
                 this.func_147136_ar();
                 this.func_82356_Z();
                 this.func_110455_j();
                 this.func_70002_Q();
-                this.func_71191_d(this.field_71340_o.func_73669_a("max-build-height", 256));
-                this.func_71191_d((this.func_71207_Z() + 8) / 16 * 16);
-                this.func_71191_d(MathHelper.func_76125_a(this.func_71207_Z(), 64, 256));
-                this.field_71340_o.func_73667_a("max-build-height", Integer.valueOf(this.func_71207_Z()));
+                this.func_71191_d(256);
+                NailedEventFactory.fireStartBeforeWorldLoad(this);
                 field_155771_h.info("Preparing level \"" + this.func_71270_I() + "\"");
-                this.func_71247_a(this.func_71270_I(), this.func_71270_I(), k, worldtype, s2);
+                this.func_71247_a(this.func_71270_I(), this.func_71270_I(), 0, null, null);
                 long i1 = System.nanoTime() - j;
                 String s3 = String.format("%.3fs", new Object[] {Double.valueOf((double)i1 / 1.0E9D)});
                 field_155771_h.info("Done (" + s3 + ")! For help, type \"help\" or \"?\"");
@@ -220,6 +216,8 @@
                     this.field_71339_n.func_72602_a();
                 }
 
+                allowPlayerLogins = true; //Delay player login until here to prevent CME's
+                NailedEventFactory.fireServerStarted(this);
                 return true;
             }
         }
@@ -234,11 +232,11 @@
     }
 
     public EnumDifficulty func_147135_j() {
-        return EnumDifficulty.func_151523_a(this.field_71340_o.func_73669_a("difficulty", 1));
+        return EnumDifficulty.NORMAL;
     }
 
     public boolean func_71199_h() {
-        return this.field_71340_o.func_73670_a("hardcore", false);
+        return false;
     }
 
     protected void func_71228_a(CrashReport p_71228_1_) {}
@@ -271,11 +269,11 @@
     }
 
     public boolean func_71255_r() {
-        return this.field_71340_o.func_73670_a("allow-nether", true);
+        return true;
     }
 
     public boolean func_71193_K() {
-        return this.field_71340_o.func_73670_a("spawn-monsters", true);
+        return true;
     }
 
     public void func_70000_a(PlayerUsageSnooper p_70000_1_) {
@@ -346,11 +344,11 @@
     }
 
     public boolean func_82356_Z() {
-        return this.field_71340_o.func_73670_a("enable-command-block", false);
+        return true;
     }
 
     public int func_82357_ak() {
-        return this.field_71340_o.func_73669_a("spawn-protection", super.func_82357_ak());
+        return 0;
     }
 
     public boolean func_96290_a(World p_96290_1_, int p_96290_2_, int p_96290_3_, int p_96290_4_, EntityPlayer p_96290_5_) {
